{"ast":null,"code":"var _jsxFileName = \"D:\\\\areda\\\\Webdev\\\\Weather\\\\weatherapp\\\\src\\\\WeatherDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherDisplay() {\n  _s();\n\n  // the city input and the day input\n  const [City, setCity] = useState(null);\n  const [citiesfromapi, setCities] = useState(null);\n  const [days, setDays] = useState(\"\");\n  const initalstate = {\n    City: \"\",\n    Days: \"\"\n  }; //the json data for the city validator\n\n  const jsonarray = [];\n  const Cities = []; //the renderers depending on the filters used.\n\n  useEffect(() => {\n    axios.get(\"https://raw.githubusercontent.com/russ666/all-countries-and-cities-json/master/countries.json\").then(res => jsonarray.push(res.data)).then(h => setCities(jsonarray));\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000\").then(res => console.log(res)).catch(err => console.log(\"request failed\"));\n  }, []);\n  /* const checker = () => {\r\n       citiesfromapi && citiesfromapi.map(item => Cities.push(Object.keys(item)))\r\n       \r\n       console.log(Cities)\r\n   }\r\n     checker()*/\n  //e: { preventDefault: () => void; }\n\n  const handleClick = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:5000\", \"hello\").then(res => console.log(initalstate)).catch(err => console.log(err));\n  };\n\n  const handlechangeCity = e => {\n    setCity(e.target.value);\n  };\n\n  const handlechangeDays = e => {\n    setCity(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex max-h-full justify-center items-center bg-slate-600\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"City\",\n          placeholder: \"City\",\n          onChange: handlechangeCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Days\",\n          placeholder: \"Number of days\",\n          onChange: handlechangeDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Press here to send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WeatherDisplay, \"axN2C+09HYoTSqvr+bM8yu/E/HA=\");\n\n_c = WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"sources":["D:/areda/Webdev/Weather/weatherapp/src/WeatherDisplay.tsx"],"names":["axios","useState","useEffect","WeatherDisplay","City","setCity","citiesfromapi","setCities","days","setDays","initalstate","Days","jsonarray","Cities","get","then","res","push","data","h","console","log","catch","err","handleClick","e","preventDefault","post","handlechangeCity","target","value","handlechangeDays"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAA2D,OAA3D;;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAOrC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,aAAD,EAAgBC,SAAhB,IAA6BN,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAGA,QAAMS,WAAW,GAAG;AAChBN,IAAAA,IAAI,EAAE,EADU;AAEhBO,IAAAA,IAAI,EAAE;AAFU,GAApB,CAbqC,CAkBrC;;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,MAAM,GAAG,EAAf,CApBqC,CAsBrC;;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACc,GAAN,CAAuB,+FAAvB,EACKC,IADL,CACUC,GAAG,IAAIJ,SAAS,CAACK,IAAV,CAAeD,GAAG,CAACE,IAAnB,CADjB,EAEKH,IAFL,CAEUI,CAAC,IAAIZ,SAAS,CAACK,SAAD,CAFxB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACc,GAAN,CAAU,uBAAV,EACKC,IADL,CACUC,GAAG,IAAII,OAAO,CAACC,GAAR,CAAYL,GAAZ,CADjB,EAEKM,KAFL,CAEWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAFlB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMD;AACH;AACA;AACA;AACA;AACA;AAGI;;AAEA,QAAMG,WAAuD,GAAIC,CAAD,IAAwC;AACpGA,IAAAA,CAAC,CAACC,cAAF;AACA1B,IAAAA,KAAK,CAAC2B,IAAN,CAAW,uBAAX,EAAoC,OAApC,EACGZ,IADH,CACQC,GAAG,IAAII,OAAO,CAACC,GAAR,CAAYX,WAAZ,CADf,EAEGY,KAFH,CAESC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFhB;AAGC,GALL;;AAOA,QAAMK,gBAAgB,GAAIH,CAAD,IAA4C;AACjEpB,IAAAA,OAAO,CAACoB,CAAC,CAACI,MAAF,CAASC,KAAV,CAAP;AAAwB,GAD5B;;AAGA,QAAMC,gBAAgB,GAAIN,CAAD,IAA4C;AACjEpB,IAAAA,OAAO,CAACoB,CAAC,CAACI,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAKA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,0DAAf;AAAA,6BACA;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,WAAW,EAAE,MAA5C;AAAmD,UAAA,QAAQ,EAAEF;AAA7D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,WAAW,EAAC,gBAA3C;AAA4D,UAAA,QAAQ,EAAEG;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAGP,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzEuBrB,c;;KAAAA,c","sourcesContent":["import axios from \"axios\";\r\nimport {useState, useEffect, useMemo, SetStateAction} from \"react\"\r\n\r\n\r\nexport default function WeatherDisplay() {\r\n\r\n    \r\n    interface Data {\r\n        [country: string]: string[]\r\n    }\r\n\r\n    // the city input and the day input\r\n    const [City, setCity] = useState(null)\r\n    const [citiesfromapi, setCities] = useState(null)\r\n    const [days, setDays] = useState(\"\")\r\n    \r\n\r\n    const initalstate = {\r\n        City: \"\",\r\n        Days: \"\"\r\n    }\r\n    \r\n    //the json data for the city validator\r\n    const jsonarray = []\r\n    const Cities = []\r\n\r\n    //the renderers depending on the filters used.\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get<Data | null>(\"https://raw.githubusercontent.com/russ666/all-countries-and-cities-json/master/countries.json\")\r\n            .then(res => jsonarray.push(res.data))\r\n            .then(h => setCities(jsonarray))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000\")\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(\"request failed\"))\r\n    }, []) \r\n\r\n   /* const checker = () => {\r\n        citiesfromapi && citiesfromapi.map(item => Cities.push(Object.keys(item)))\r\n        \r\n        console.log(Cities)\r\n    }\r\n\r\n    checker()*/\r\n\r\n    //e: { preventDefault: () => void; }\r\n\r\n    const handleClick: React.MouseEventHandler<HTMLButtonElement> = (e: { preventDefault: () => void; }) => {\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:5000\", \"hello\")\r\n          .then(res => console.log(initalstate))\r\n          .catch(err => console.log(err))\r\n        }\r\n  \r\n    const handlechangeCity = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCity(e.target.value)}\r\n\r\n    const handlechangeDays = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCity(e.target.value)\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n        <div className=\"flex max-h-full justify-center items-center bg-slate-600\">\r\n        <form>\r\n            <input type=\"text\" name=\"City\" placeholder= \"City\" onChange={handlechangeCity} />\r\n            <input type=\"text\" name=\"Days\" placeholder=\"Number of days\" onChange={handlechangeDays} />\r\n            <button onClick= {handleClick} >Press here to send</button>\r\n        </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
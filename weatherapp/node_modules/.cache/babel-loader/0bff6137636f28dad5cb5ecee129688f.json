{"ast":null,"code":"var _jsxFileName = \"D:\\\\areda\\\\Webdev\\\\Weather\\\\weatherapp\\\\src\\\\WeatherDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WeatherDisplay() {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [cities, setCities] = useState(null);\n  const jsonarray = [];\n\n  const handlechange = e => {\n    setValue(e.target.value);\n  };\n\n  const citylist = useEffect(() => {\n    axios.get(\"https://raw.githubusercontent.com/russ666/all-countries-and-cities-json/master/countries.json\").then(res => jsonarray.push(res.data)).then(h => setCities(jsonarray));\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000\").then(res => console.log(res)).catch(err => console.log(\"request failed\"));\n  }, []);\n  const data = {\n    text: value\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:5000\", data).then(res => console.log(\"done\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handlechange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Press here to send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(WeatherDisplay, \"sZMoyRxBFNgt7FuNzCCGgVH5sxs=\");\n\n_c = WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"sources":["D:/areda/Webdev/Weather/weatherapp/src/WeatherDisplay.tsx"],"names":["axios","useState","useEffect","WeatherDisplay","value","setValue","cities","setCities","jsonarray","handlechange","e","target","citylist","get","then","res","push","data","h","console","log","catch","err","text","handleClick","preventDefault","post"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAA2D,OAA3D;;;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAQrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAuB,IAAvB,CAApC;AACA,QAAMO,SAA0B,GAAG,EAAnC;;AAEA,QAAMC,YAAY,GAAGC,CAAD,IAAwD;AACxEL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMQ,QAAQ,GAAGV,SAAS,CAAC,MAAM;AAC7BF,IAAAA,KAAK,CAACa,GAAN,CAAuB,+FAAvB,EACKC,IADL,CACUC,GAAG,IAAIP,SAAS,CAACQ,IAAV,CAAeD,GAAG,CAACE,IAAnB,CADjB,EAEKH,IAFL,CAEUI,CAAC,IAAIX,SAAS,CAACC,SAAD,CAFxB;AAGH,GAJyB,EAIvB,EAJuB,CAA1B;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACa,GAAN,CAAU,uBAAV,EACKC,IADL,CACUC,GAAG,IAAII,OAAO,CAACC,GAAR,CAAYL,GAAZ,CADjB,EAEKM,KAFL,CAEWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAFlB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAQA,QAAMH,IAAY,GAAG;AACjBM,IAAAA,IAAI,EAAEnB;AADW,GAArB;;AAIA,QAAMoB,WAAW,GAAId,CAAD,IAAwC;AACxDA,IAAAA,CAAC,CAACe,cAAF;AACAzB,IAAAA,KAAK,CAAC0B,IAAN,CAAW,uBAAX,EAAoCT,IAApC,EACCH,IADD,CACMC,GAAG,IAAII,OAAO,CAACC,GAAR,CAAY,MAAZ,CADb;AAEH,GAJD;;AAMA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,8BAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEX;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAGe,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAUH;;GAlDuBrB,c;;KAAAA,c","sourcesContent":["import axios from \"axios\";\r\nimport {useState, useEffect, useMemo, SetStateAction} from \"react\"\r\nimport City from \"./City\"\r\n\r\nexport default function WeatherDisplay() {\r\n\r\n    \r\n    interface Data {\r\n        [country: string]: string[]\r\n    }\r\n\r\n    \r\n    const [value, setValue] = useState(\"\")\r\n    const [cities, setCities] = useState<Data | null | object>(null)\r\n    const jsonarray: (Data | null)[] = []\r\n\r\n    const handlechange =(e: { target: { value: SetStateAction<string>; }; }) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const citylist = useEffect(() => {\r\n        axios.get<Data | null>(\"https://raw.githubusercontent.com/russ666/all-countries-and-cities-json/master/countries.json\")\r\n            .then(res => jsonarray.push(res.data))\r\n            .then(h => setCities(jsonarray))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000\")\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(\"request failed\"))\r\n    }, []) \r\n\r\n\r\n\r\n    const data: object = {\r\n        text: value\r\n    }\r\n\r\n    const handleClick = (e: { preventDefault: () => void; }) => {\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:5000\", data)\r\n        .then(res => console.log(\"done\"))\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <h1>hello</h1>\r\n        <form>\r\n           \r\n            <input type=\"text\" onChange={handlechange} />\r\n            <button onClick= {handleClick} >Press here to send</button>\r\n        </form>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
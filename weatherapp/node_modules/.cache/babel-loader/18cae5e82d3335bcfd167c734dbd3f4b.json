{"ast":null,"code":"var _jsxFileName = \"D:\\\\areda\\\\Webdev\\\\Weather\\\\weatherapp\\\\src\\\\WeatherDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherDisplay() {\n  _s();\n\n  // the city input and the day input\n  // const [City, setCity] = useState(null)\n  const [citiesfromapi, setCities] = useState(null); //   const [days, setDays] = useState(\"\")\n\n  const [a, setA] = useState({\n    City: \"\",\n    Days: \"\"\n  });\n  const initalstate = {\n    City: \"\",\n    Days: \"\"\n  }; //the json data for the city validator\n\n  const jsonarray = [];\n  const Cities = []; //the renderers depending on the filters used.\n\n  useEffect(() => {\n    axios.get(\"https://raw.githubusercontent.com/russ666/all-countries-and-cities-json/master/countries.json\").then(res => jsonarray.push(res.data)).then(h => setCities(jsonarray));\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000\").then(res => console.log(res)).catch(err => console.log(\"request failed\"));\n  }, []);\n  /* const checker = () => {\r\n       citiesfromapi && citiesfromapi.map(item => Cities.push(Object.keys(item)))\r\n       \r\n       console.log(Cities)\r\n   }\r\n     checker()*/\n  //e: { preventDefault: () => void; }\n\n  const handleClick = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:5000\", a).then(res => setA(initalstate)).catch(err => console.log(err));\n  };\n\n  const handlechange = e => {\n    setA({ ...a,\n      [e.target.name]: [e.target.value]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [a && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: a.City\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex max-h-full justify-center items-center bg-slate-600\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"City\",\n          placeholder: \"City\",\n          onChange: handlechange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Days\",\n          placeholder: \"Number of days\",\n          onChange: handlechange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Press here to send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WeatherDisplay, \"ek6hKubEqtMLpJjP85LOTA04GyY=\");\n\n_c = WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"sources":["D:/areda/Webdev/Weather/weatherapp/src/WeatherDisplay.tsx"],"names":["axios","useState","useEffect","WeatherDisplay","citiesfromapi","setCities","a","setA","City","Days","initalstate","jsonarray","Cities","get","then","res","push","data","h","console","log","catch","err","handleClick","e","preventDefault","post","handlechange","target","name","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAA2D,OAA3D;;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAOrC;AACD;AACC,QAAM,CAACC,aAAD,EAAgBC,SAAhB,IAA6BJ,QAAQ,CAAC,IAAD,CAA3C,CATqC,CAUxC;;AACG,QAAM,CAACK,CAAD,EAAIC,IAAJ,IAAYN,QAAQ,CAAC;AACvBO,IAAAA,IAAI,EAAE,EADiB;AAEvBC,IAAAA,IAAI,EAAE;AAFiB,GAAD,CAA1B;AAKA,QAAMC,WAAW,GAAG;AAChBF,IAAAA,IAAI,EAAE,EADU;AAEhBC,IAAAA,IAAI,EAAE;AAFU,GAApB,CAhBqC,CAqBrC;;AACA,QAAME,SAAS,GAAG,EAAlB;AACA,QAAMC,MAAM,GAAG,EAAf,CAvBqC,CAyBrC;;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACa,GAAN,CAAuB,+FAAvB,EACKC,IADL,CACUC,GAAG,IAAIJ,SAAS,CAACK,IAAV,CAAeD,GAAG,CAACE,IAAnB,CADjB,EAEKH,IAFL,CAEUI,CAAC,IAAIb,SAAS,CAACM,SAAD,CAFxB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACa,GAAN,CAAU,uBAAV,EACKC,IADL,CACUC,GAAG,IAAII,OAAO,CAACC,GAAR,CAAYL,GAAZ,CADjB,EAEKM,KAFL,CAEWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAFlB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMD;AACH;AACA;AACA;AACA;AACA;AAGI;;AAEA,QAAMG,WAAuD,GAAIC,CAAD,IAAwC;AACpGA,IAAAA,CAAC,CAACC,cAAF;AACAzB,IAAAA,KAAK,CAAC0B,IAAN,CAAW,uBAAX,EAAoCpB,CAApC,EACGQ,IADH,CACQC,GAAG,IAAIR,IAAI,CAACG,WAAD,CADnB,EAEGW,KAFH,CAESC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFhB;AAGC,GALL;;AAOA,QAAMK,YAAY,GAAIH,CAAD,IAA4C;AAC7DjB,IAAAA,IAAI,CAAC,EACD,GAAGD,CADF;AAED,OAACkB,CAAC,CAACI,MAAF,CAASC,IAAV,GAAiB,CAACL,CAAC,CAACI,MAAF,CAASE,KAAV;AAFhB,KAAD,CAAJ;AAKH,GAND;;AAQA,sBACI;AAAA,eACCxB,CAAC,iBAAI;AAAA,gBAAKA,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,YADN,eAEA;AAAK,MAAA,SAAS,EAAC,0DAAf;AAAA,6BACA;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,WAAW,EAAE,MAA5C;AAAmD,UAAA,QAAQ,EAAEmB;AAA7D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,WAAW,EAAC,gBAA3C;AAA4D,UAAA,QAAQ,EAAEA;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAGJ,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA7EuBpB,c;;KAAAA,c","sourcesContent":["import axios from \"axios\";\r\nimport {useState, useEffect, useMemo, SetStateAction} from \"react\"\r\n\r\n\r\nexport default function WeatherDisplay() {\r\n\r\n    \r\n    interface Data {\r\n        [country: string]: string[]\r\n    }\r\n\r\n    // the city input and the day input\r\n   // const [City, setCity] = useState(null)\r\n    const [citiesfromapi, setCities] = useState(null)\r\n //   const [days, setDays] = useState(\"\")\r\n    const [a, setA] = useState({\r\n        City: \"\",\r\n        Days: \"\"\r\n    })\r\n\r\n    const initalstate = {\r\n        City: \"\",\r\n        Days: \"\"\r\n    }\r\n    \r\n    //the json data for the city validator\r\n    const jsonarray = []\r\n    const Cities = []\r\n\r\n    //the renderers depending on the filters used.\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get<Data | null>(\"https://raw.githubusercontent.com/russ666/all-countries-and-cities-json/master/countries.json\")\r\n            .then(res => jsonarray.push(res.data))\r\n            .then(h => setCities(jsonarray))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000\")\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(\"request failed\"))\r\n    }, []) \r\n\r\n   /* const checker = () => {\r\n        citiesfromapi && citiesfromapi.map(item => Cities.push(Object.keys(item)))\r\n        \r\n        console.log(Cities)\r\n    }\r\n\r\n    checker()*/\r\n\r\n    //e: { preventDefault: () => void; }\r\n\r\n    const handleClick: React.MouseEventHandler<HTMLButtonElement> = (e: { preventDefault: () => void; }) => {\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:5000\", a)\r\n          .then(res => setA(initalstate))\r\n          .catch(err => console.log(err))\r\n        }\r\n  \r\n    const handlechange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setA({\r\n            ...a,\r\n            [e.target.name]: [e.target.value]\r\n        })\r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n        {a && <h1>{a.City}</h1>}\r\n        <div className=\"flex max-h-full justify-center items-center bg-slate-600\">\r\n        <form>\r\n            <input type=\"text\" name=\"City\" placeholder= \"City\" onChange={handlechange} />\r\n            <input type=\"text\" name=\"Days\" placeholder=\"Number of days\" onChange={handlechange} />\r\n            <button onClick= {handleClick} >Press here to send</button>\r\n        </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}